name: publish
on:
    push:
        branches:
            - main
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v4

            - name: install rust
              uses: dtolnay/rust-toolchain@stable
              with:
                  components: rustfmt
                  targets: x86_64-unknown-linux-musl,x86_64-pc-windows-gnu,i686-pc-windows-gnu,x86_64-apple-darwin,aarch64-apple-darwin

            - name: cache osxcross
              id: cache-osxcross
              uses: actions/cache@v4
              with:
                  path: osxcross
                  key: ${{ runner.os }}-osxcross-0.1
                  restore-keys: |
                      ${{ runner.os }}-osxcross-

            - name: install osxcross (macos tools)
              if: steps.cache-osxcross.outputs.cache-hit != 'true'
              run: |
                  rm -rf osxcross || true 
                  git clone https://github.com/tpoechtrager/osxcross
                  cd osxcross
                  sudo tools/get_dependencies.sh
                  wget -nc https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX11.3.sdk.tar.xz
                  mv MacOSX11.3.sdk.tar.xz tarballs/
                  UNATTENDED=yes OSX_VERSION_MIN=10.7 ./build.sh

            - name: install musl (linux tools)
              run: |
                  sudo apt-get install -y musl-tools

            - name: install mingw (windows tools)
              run: |
                  sudo apt-get update
                  sudo apt-get install -y gcc-mingw-w64-x86-64 gcc-mingw-w64-i686

            - name: build macos
              run: |
                  export PATH="$(pwd)/osxcross/target/bin:$PATH"
                  export LIBZ_SYS_STATIC=1
                  export CC=o64-clang
                  export CXX=o64-clang++
                  cargo build --release --target x86_64-apple-darwin
                  cargo build --release --target aarch64-apple-darwin

            - name: build linux
              run: cargo build --release --target x86_64-unknown-linux-musl

            - name: build windows
              run: cargo build --release --target x86_64-pc-windows-gnu

            - name: build windows 32
              run: cargo build --release --target i686-pc-windows-gnu

            - name: copy artifacts
              run: |
                  mkdir -p pkg/bin
                  mv target/x86_64-unknown-linux-musl/release/voulr pkg/bin/voulr-linux
                  mv target/x86_64-pc-windows-gnu/release/voulr.exe pkg/bin/voulr-win64.exe
                  mv target/i686-pc-windows-gnu/release/voulr.exe pkg/bin/voulr-win32.exe
                  mv target/x86_64-apple-darwin/release/voulr pkg/bin/voulr-macos
                  mv target/aarch64-apple-darwin/release/voulr pkg/bin/voulr-macos-arm64

            - name: install node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  registry-url: "https://registry.npmjs.org"

            - name: publish to npm
              run: |
                  cd pkg
                  npm publish
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
